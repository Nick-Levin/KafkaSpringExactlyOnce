spring:
  output:
    ansi:
      enabled: ALWAYS

  kafka:
    topic: c123Topic
    producer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      client-id: c123-producer
      acks: all
      retries: 3
      max-in-flight-requests-per-connection: 1

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 10
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/poalim_kafka
    username: c123user
    password: c123456789


logging:
  level:
    root: WARN
    com.c123.KafkaSpring: WARN
    org.springframework.core: WARN
    org.springframework.kafka: WARN
    org.hibernate: WARN

  pattern:
    console: "%green(%d) %highlight(%5p) %magenta([%t]) %cyan(%logger{36}.%M) - %msg%n"
    file:    "%d %5p [%t] %logger.%M - %msg%n"
    dateformat: "yyyy-MM-dd HH:mm:ss.SSS"

  file:
    name: log/app.log
    max-size: 10MB
    max-history: 30


sequences:
  start: 1
  skip: 20
  names:
    - employee


generator:
  amount: 10
  sequence_name: employee
  employee:
    hire_date:  # hired before $(random between min and max) days
      min: 0
      max: 90
    dept_id:    # belongs to random department between min and max
      min: 1
      max: 10
    salary:     # has salary between min and max
      min: 10000
      max: 50000